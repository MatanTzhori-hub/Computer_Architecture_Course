==76655== Memcheck, a memory error detector
==76655== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==76655== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==76655== Command: ./dflow_calc ./inputs/two/opcode_two0 ./inputs/two/test_example_two0 p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17 p18 p19 p20 p21 p22 p23 p24 p25 p26 p27 p28 p29 d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29
==76655== 
Reading the opcodes latency info from ./inputs/two/opcode_two0 ... Got latency for 30 opcodes
Reading the program file ./inputs/two/test_example_two0 ... Found 30 instructions
getProgDepth()==10
getDepDepth(0)==0
getDepDepth(1)==0
getDepDepth(2)==0
getDepDepth(3)==0
getDepDepth(4)==0
getDepDepth(5)==0
getDepDepth(6)==0
getDepDepth(7)==0
getDepDepth(8)==0
getDepDepth(9)==0
getDepDepth(10)==0
getDepDepth(11)==0
getDepDepth(12)==0
getDepDepth(13)==0
getDepDepth(14)==0
getDepDepth(15)==0
getDepDepth(16)==0
getDepDepth(17)==0
getDepDepth(18)==0
getDepDepth(19)==0
getDepDepth(20)==0
getDepDepth(21)==0
getDepDepth(22)==0
getDepDepth(23)==0
getDepDepth(24)==0
getDepDepth(25)==0
getDepDepth(26)==0
getDepDepth(27)==0
getDepDepth(28)==0
getDepDepth(29)==0
getInstDeps(0)=={-1,-1}
getInstDeps(1)=={-1,-1}
getInstDeps(2)=={-1,-1}
getInstDeps(3)=={-1,-1}
getInstDeps(4)=={-1,-1}
getInstDeps(5)=={-1,-1}
getInstDeps(6)=={-1,-1}
getInstDeps(7)=={-1,-1}
getInstDeps(8)=={-1,-1}
getInstDeps(9)=={-1,-1}
getInstDeps(10)=={-1,-1}
getInstDeps(11)=={-1,-1}
getInstDeps(12)=={-1,-1}
getInstDeps(13)=={-1,-1}
getInstDeps(14)=={-1,-1}
getInstDeps(15)=={-1,-1}
getInstDeps(16)=={-1,-1}
getInstDeps(17)=={-1,-1}
getInstDeps(18)=={-1,-1}
getInstDeps(19)=={-1,-1}
getInstDeps(20)=={-1,-1}
getInstDeps(21)=={-1,-1}
getInstDeps(22)=={-1,-1}
getInstDeps(23)=={-1,-1}
getInstDeps(24)=={-1,-1}
getInstDeps(25)=={-1,-1}
getInstDeps(26)=={-1,-1}
getInstDeps(27)=={-1,-1}
getInstDeps(28)=={-1,-1}
getInstDeps(29)=={-1,-1}
==76655== 
==76655== HEAP SUMMARY:
==76655==     in use at exit: 0 bytes in 0 blocks
==76655==   total heap usage: 69 allocs, 69 frees, 89,312 bytes allocated
==76655== 
==76655== All heap blocks were freed -- no leaks are possible
==76655== 
==76655== For lists of detected and suppressed errors, rerun with: -s
==76655== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
