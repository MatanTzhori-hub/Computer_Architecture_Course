==102300== Memcheck, a memory error detector
==102300== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==102300== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==102300== Command: ./dflow_calc ./inputs/random/opcode79 ./inputs/random/test_example79 p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17 p18 p19 p20 p21 p22 p23 p24 p25 p26 p27 p28 p29 p30 p31 p32 p33 p34 p35 p36 p37 p38 p39 p40 p41 p42 p43 p44 p45 p46 p47 p48 p49 d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 d32 d33 d34 d35 d36 d37 d38 d39 d40 d41 d42 d43 d44 d45 d46 d47 d48 d49
==102300== 
Reading the opcodes latency info from ./inputs/random/opcode79 ... Got latency for 31 opcodes
Reading the program file ./inputs/random/test_example79 ... Found 50 instructions
getProgDepth()==44
getDepDepth(0)==0
getDepDepth(1)==0
getDepDepth(2)==0
getDepDepth(3)==0
getDepDepth(4)==0
getDepDepth(5)==0
getDepDepth(6)==3
getDepDepth(7)==0
getDepDepth(8)==0
getDepDepth(9)==4
getDepDepth(10)==0
getDepDepth(11)==0
getDepDepth(12)==5
getDepDepth(13)==0
getDepDepth(14)==5
getDepDepth(15)==5
getDepDepth(16)==0
getDepDepth(17)==5
getDepDepth(18)==0
getDepDepth(19)==5
getDepDepth(20)==5
getDepDepth(21)==5
getDepDepth(22)==8
getDepDepth(23)==12
getDepDepth(24)==8
getDepDepth(25)==8
getDepDepth(26)==12
getDepDepth(27)==18
getDepDepth(28)==0
getDepDepth(29)==8
getDepDepth(30)==8
getDepDepth(31)==0
getDepDepth(32)==16
getDepDepth(33)==8
getDepDepth(34)==16
getDepDepth(35)==11
getDepDepth(36)==5
getDepDepth(37)==5
getDepDepth(38)==26
getDepDepth(39)==18
getDepDepth(40)==8
getDepDepth(41)==13
getDepDepth(42)==18
getDepDepth(43)==19
getDepDepth(44)==22
getDepDepth(45)==22
getDepDepth(46)==14
getDepDepth(47)==36
getDepDepth(48)==8
getDepDepth(49)==18
getInstDeps(0)=={-1,-1}
getInstDeps(1)=={-1,-1}
getInstDeps(2)=={-1,-1}
getInstDeps(3)=={-1,-1}
getInstDeps(4)=={-1,-1}
getInstDeps(5)=={-1,-1}
getInstDeps(6)=={5,-1}
getInstDeps(7)=={-1,-1}
getInstDeps(8)=={-1,-1}
getInstDeps(9)=={7,-1}
getInstDeps(10)=={-1,-1}
getInstDeps(11)=={-1,-1}
getInstDeps(12)=={-1,6}
getInstDeps(13)=={-1,-1}
getInstDeps(14)=={-1,0}
getInstDeps(15)=={-1,0}
getInstDeps(16)=={-1,-1}
getInstDeps(17)=={-1,6}
getInstDeps(18)=={-1,-1}
getInstDeps(19)=={10,-1}
getInstDeps(20)=={-1,6}
getInstDeps(21)=={10,-1}
getInstDeps(22)=={-1,4}
getInstDeps(23)=={-1,22}
getInstDeps(24)=={17,-1}
getInstDeps(25)=={10,20}
getInstDeps(26)=={-1,22}
getInstDeps(27)=={5,24}
getInstDeps(28)=={-1,-1}
getInstDeps(29)=={-1,4}
getInstDeps(30)=={4,-1}
getInstDeps(31)=={-1,-1}
getInstDeps(32)=={20,26}
getInstDeps(33)=={-1,2}
getInstDeps(34)=={26,-1}
getInstDeps(35)=={29,-1}
getInstDeps(36)=={-1,0}
getInstDeps(37)=={0,28}
getInstDeps(38)=={34,17}
getInstDeps(39)=={33,37}
getInstDeps(40)=={-1,20}
getInstDeps(41)=={37,40}
getInstDeps(42)=={14,33}
getInstDeps(43)=={37,32}
getInstDeps(44)=={-1,39}
getInstDeps(45)=={14,39}
getInstDeps(46)=={35,35}
getInstDeps(47)=={38,40}
getInstDeps(48)=={20,20}
getInstDeps(49)=={20,33}
==102300== 
==102300== HEAP SUMMARY:
==102300==     in use at exit: 0 bytes in 0 blocks
==102300==   total heap usage: 109 allocs, 109 frees, 90,752 bytes allocated
==102300== 
==102300== All heap blocks were freed -- no leaks are possible
==102300== 
==102300== For lists of detected and suppressed errors, rerun with: -s
==102300== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
